[tool:pytest]
# Unified pytest configuration for SVG2PPTX testing system
# This configuration ensures consistent testing across all test types

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add project source to path
pythonpath = src

# Default options
addopts =
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --durations=10
    --maxfail=3
    --disable-warnings

# Test markers for categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    api: API-related tests
    converter: SVG converter tests
    performance: Performance and benchmark tests
    slow: Long-running tests
    visual: Visual regression tests
    validation: Output validation tests
    template: Template-based tests

    # Component-specific markers
    shapes: Shape converter tests
    text: Text converter tests
    paths: Path converter tests
    transforms: Transform-related tests
    gradients: Gradient converter tests
    markers_svg: SVG marker converter tests
    animations: Animation converter tests

    # Quality markers
    coverage: Coverage-related tests
    regression: Regression tests
    smoke: Smoke tests for basic functionality

    # Environment markers
    requires_display: Tests requiring display/GUI
    requires_network: Tests requiring network access
    requires_filesystem: Tests requiring file system access

# Coverage configuration
coverage_report =
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-branch
    --cov-fail-under=80

# Parallel execution
parallel_workers = auto

# Timeout settings
timeout = 300
timeout_method = thread

# Fixture configuration
fixture_scope_order = [
    "session",
    "package",
    "module",
    "class",
    "function"
]

# Test output formatting
console_output_style = progress
junit_family = xunit2

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning:lxml.*
    ignore::UserWarning:PIL.*

# Mock configuration
mock_use_standalone_module = true

# Logging configuration during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Temporary directory for test artifacts
tmp_path_retention_count = 3
tmp_path_retention_policy = failed

# xdist configuration for parallel execution
rsyncdirs = src tests
rsyncignore = .git __pycache__ *.pyc

# Performance testing configuration
benchmark_min_time = 0.000005
benchmark_max_time = 1.0
benchmark_min_rounds = 5
benchmark_timer = perf_counter
benchmark_disable_gc = false
benchmark_warmup = false
benchmark_warmup_iterations = 100000
benchmark_sort = min
benchmark_group_by = group
benchmark_columns = min, max, mean, stddev, median, iqr, outliers, ops, rounds, iterations
benchmark_histogram = false