[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "svg2pptx"
version = "1.0.0"
description = "High-fidelity SVG to PowerPoint converter with Google Drive integration"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "SVG2PPTX Contributors" }
]
maintainers = [
    { name = "SVG2PPTX Contributors" }
]
keywords = [
    "svg",
    "powerpoint",
    "pptx", 
    "converter",
    "google-drive",
    "api",
    "graphics",
    "presentation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: XML"
]
requires-python = ">=3.9"
dependencies = [
    # Core PowerPoint manipulation
    "python-pptx>=0.6.21",
    
    # XML parsing and manipulation  
    "lxml>=4.9.0",
    
    # Web API Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    
    # HTTP Client for SVG fetching
    "httpx>=0.25.0",
    
    # Google Drive Integration
    "google-api-python-client>=2.100.0",
    "google-auth>=2.23.0",
    "google-auth-oauthlib>=1.1.0",
    "google-auth-httplib2>=0.1.1",
    
    # Environment Configuration
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    
    # Font processing and text-to-path conversion
    "fonttools>=4.42.0",
    "uharfbuzz>=0.37.0",
    "freetype-py>=2.4.0"
]

[project.optional-dependencies]
dev = [
    # Development and testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-html>=3.2.0",
    
    # Code quality
    "black>=22.0.0",
    "isort>=5.10.0", 
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    
    # Performance profiling
    "psutil>=5.9.0"
]
enhanced = [
    # Optional: Enhanced SVG parsing
    "svglib>=1.4.0",
    "reportlab>=3.6.0"
]
all = [
    "svg2pptx[dev,enhanced]"
]

[project.urls]
Homepage = "https://github.com/svg2pptx/svg2pptx"
Documentation = "https://github.com/svg2pptx/svg2pptx/blob/main/README.md"
Repository = "https://github.com/svg2pptx/svg2pptx"
"Bug Tracker" = "https://github.com/svg2pptx/svg2pptx/issues"

[project.scripts]
svg2pptx-server = "api.main:run_server"

[tool.hatch.build]
include = [
    "src/**/*.py",
    "api/**/*.py",
    "tests/**/*.py",
    "README.md",
    "LICENSE*"
]
exclude = [
    "*.pyc",
    "__pycache__/",
    ".pytest_cache/",
    ".coverage",
    "htmlcov/",
    ".venv/",
    "venv/",
    ".env*",
    "*.log"
]

[tool.hatch.build.targets.wheel]
packages = ["src", "api"]

[tool.hatch.build.targets.sdist]
include = [
    "src",
    "api", 
    "tests",
    "README.md",
    "LICENSE*",
    "pyproject.toml"
]

# Development tool configurations

[tool.pytest.ini_options]
# Test discovery - Optimized for consolidated directory structure
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Test execution options - Enhanced for better output and monitoring
addopts = [
    # Strict validation
    "--strict-markers",
    "--strict-config",
    
    # Coverage configuration
    "--cov=src",
    "--cov=api",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml", 
    "--cov-report=term-missing:skip-covered",
    "--cov-fail-under=85",
    
    # Output formatting
    "--tb=short",
    "--no-header",
    "--showlocals",
    "--durations=10",
    "--durations-min=1.0",
    
    # Performance and monitoring
    "--maxfail=5",
    "--disable-warnings"
]

# Test markers - Updated for consolidated structure
markers = [
    # Primary test categories (aligned with directory structure)
    "unit: Unit tests for individual components (tests/unit/)",
    "integration: Integration tests for multiple components (tests/integration/)",
    "e2e: End-to-end tests (tests/e2e/)",
    "visual: Visual regression tests (tests/visual/)",
    "benchmark: Performance benchmark tests (tests/performance/benchmarks/)",
    "architecture: Architecture and consistency tests (tests/quality/architecture/)",
    "coverage: Coverage analysis tests (tests/quality/coverage/)",
    
    # Test characteristics
    "slow: Tests that take more than 10 seconds",
    
    # Component-specific markers
    "converter: Tests for converter modules",
    "validation: Tests for validation components",
    "processing: Tests for core processing components",
    "utils: Tests for utility modules",
    "batch: Tests for batch processing",
    "api: Tests for API endpoints",
    "db: Tests requiring database operations",
    
    # Legacy markers for SVG elements (maintained for compatibility)
    "missing_elements: Tests for missing SVG elements (polyline, tspan, image, symbol, use, pattern, feGaussianBlur, feDropShadow, defs, style)",
    "critical_missing: Tests for critical priority missing elements (image, feDropShadow, tspan)",
    "high_missing: Tests for high priority missing elements (polyline, symbol, use, feGaussianBlur)",
    "medium_missing: Tests for medium priority missing elements (pattern, style, defs, svg)"
]

# Version and plugin requirements
minversion = "7.0"
required_plugins = [
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0", 
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-html>=3.2.0"
]

# Test execution configuration
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*", 
    "*/virtualenv/*",
    "*/.venv/*",
    "setup.py",
    "conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod"
]
precision = 1
show_missing = true
skip_covered = false
sort = "-cover"

[tool.coverage.html]
directory = "htmlcov"
title = "SVG2PPTX Test Coverage Report"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["src", "api"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".pytest_cache",
    "htmlcov"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101", "B601"]