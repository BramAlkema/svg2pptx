name: Test Suite with Unit/Integration Separation

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit Tests (Fast)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install core dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock pytest-xdist
        # Install only core dependencies, not external services
        pip install -r requirements.txt || echo "No requirements.txt found"

    - name: Run Unit Tests Only
      run: |
        export PYTHONPATH=.
        pytest tests/unit/ -m "not integration" \
          --cov=core \
          --cov-report=xml \
          --cov-report=term-missing \
          --tb=short \
          -v \
          --maxfail=10 \
          -n auto

    - name: Upload Unit Test Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unit-tests
        name: unit-tests-${{ matrix.python-version }}

  integration-tests:
    name: Integration Tests (External Services)
    runs-on: ubuntu-latest
    needs: unit-tests  # Run only after unit tests pass

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install all dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock
        pip install -r requirements.txt || echo "No requirements.txt found"

        # Install external service dependencies
        pip install redis huey
        pip install google-auth google-api-python-client || echo "Google auth optional"
        pip install fastapi uvicorn || echo "FastAPI optional"

    - name: Run Integration Tests Only
      run: |
        export PYTHONPATH=.
        pytest tests/unit/ -m "integration" \
          --tb=short \
          -v \
          --maxfail=5
      env:
        REDIS_URL: redis://localhost:6379/0
        TESTING: true

    - name: Run E2E Tests
      run: |
        export PYTHONPATH=.
        pytest tests/e2e/ \
          --tb=short \
          -v \
          --maxfail=3
      env:
        REDIS_URL: redis://localhost:6379/0
        TESTING: true

  full-test-suite:
    name: Full Test Suite (All Tests)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install all dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock pytest-html
        pip install -r requirements.txt || echo "No requirements.txt found"

        # Install all optional dependencies
        pip install redis huey numpy
        pip install google-auth google-api-python-client || echo "Google auth optional"
        pip install fastapi uvicorn || echo "FastAPI optional"

    - name: Generate Dependency Report
      run: |
        export PYTHONPATH=.
        python -c "from tests.utils.dependency_checks import print_dependency_report; print_dependency_report()"

    - name: Run Complete Test Suite
      run: |
        export PYTHONPATH=.
        pytest tests/ \
          --cov=core \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --html=reports/test-report.html \
          --self-contained-html \
          --tb=short \
          -v
      env:
        REDIS_URL: redis://localhost:6379/0
        TESTING: true

    - name: Upload Full Coverage Report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: full-suite
        name: full-test-suite

    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          reports/
          htmlcov/

  test-summary:
    name: Test Results Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()

    steps:
    - name: Check Unit Tests Result
      if: needs.unit-tests.result == 'failure'
      run: |
        echo "❌ Unit tests failed"
        exit 1

    - name: Check Integration Tests Result
      if: needs.integration-tests.result == 'failure'
      run: |
        echo "⚠️  Integration tests failed (external services may be unavailable)"
        echo "This is not blocking since unit tests passed"

    - name: Success Summary
      if: needs.unit-tests.result == 'success'
      run: |
        echo "✅ Unit tests passed - core functionality is working"
        if [ "${{ needs.integration-tests.result }}" == "success" ]; then
          echo "✅ Integration tests passed - external services are working"
        else
          echo "⚠️  Integration tests failed - check external service dependencies"
        fi